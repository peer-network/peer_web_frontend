async function likeComment(commentId){if(!await LiquiudityCheck(likeCost,"Like Comment",like))return!1;const accessToken=getCookie("authToken"),headers=new Headers({"Content-Type":"application/json",Authorization:`Bearer ${accessToken}`});var graphql=JSON.stringify({query:`mutation LikeComment {\n            likeComment(commentid: "${commentId}") {\n                status\n                ResponseCode\n            }\n        }`,variables:{}}),requestOptions;return fetch(GraphGL,{method:"POST",headers:headers,body:graphql,redirect:"follow"}).then(response=>response.json()).then(result=>{if("error"==result.data.likeComment.status)throw new Error(userfriendlymsg(result.data.likeComment.ResponseCode));return!0}).catch(error=>(Merror(userfriendlymsg(result.data.likeComment.ResponseCode)),!1))}async function createComment(postId,content,parentId=null){if(!await LiquiudityCheck(commentCost,"Comment Post",1))return!1;const accessToken=getCookie("authToken"),headers=new Headers({"Content-Type":"application/json",Authorization:`Bearer ${accessToken}`}),query="\n    mutation CreateComment($postId: ID!, $content: String!, $parentId: ID) {\n      createComment(action: COMMENT, postid: $postId, content: $content, parentid: $parentId) {\n        status\n        counter\n        ResponseCode\n        affectedRows {\n          commentid\n          userid\n          content\n          createdat\n          amountlikes\n          isliked\n          postid\n          parentid\n          user {\n              id\n              username\n              slug\n              img\n              isfollowed\n              isfollowing\n          }\n        }\n      }\n    }\n  ",variables={postId:postId,content:content,parentId:parentId};return fetch(GraphGL,{method:"POST",headers:headers,body:JSON.stringify({query:query,variables:variables})}).then(response=>response.json()).then(data=>(console.log("Antwort:",data),data)).catch(error=>(console.error("Fehler:",error),error))}async function fetchChildComments(parentId){const accessToken=getCookie("authToken"),headers=new Headers({"Content-Type":"application/json",Authorization:`Bearer ${accessToken}`}),query="\n  query listChildComments($parent: ID!) {\n    listChildComments(parent: $parent) {\n        status\n        counter\n        ResponseCode\n        affectedRows {\n            commentid\n            userid\n            postid\n            parentid\n            content\n            amountlikes\n            isliked\n            createdat\n            user {\n                id\n                username\n                img\n                isfollowed\n                isfollowing\n            }\n        }\n    }\n  }",variables={parent:parentId};return fetch(GraphGL,{method:"POST",headers:headers,body:JSON.stringify({query:query,variables:variables})}).then(response=>response.json()).then(res=>{if("error"===res.data.listChildComments.status)throw new Error(userfriendlymsg(res.data.listChildComments.ResponseCode));return res.data.listChildComments.affectedRows}).catch(error=>(console.error("Fehler:",error),null))}